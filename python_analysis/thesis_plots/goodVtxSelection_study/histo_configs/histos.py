import numpy as np
import awkward as ak
from myHisto import myHisto

def make_histograms(info):
    h = myHisto()
    
    # matched reco electron, reco variables
    h.make("sel_e1_pt",'ele_type','ele_pt')
    h.make("sel_e1_eta",'ele_type','eta')
    h.make("sel_e1_phi",'ele_type','phi')
    h.make("sel_e1_dxy",'ele_type','dxy')
    h.make("sel_e1_dxySignif",'ele_type','dxy_signif')
    h.make("sel_e1_trkChi2",'ele_type','trk_chi2')
    h.make('sel_e1_trkProb','ele_type','trkProb')
    h.make("sel_e1_trkRelIso",'ele_type','iso')
    h.make("sel_e1_calRelIso",'ele_type','iso')
    h.make("sel_e1_PFRelIso",'ele_type','iso')
    h.make("sel_e1_miniRelIso",'ele_type','iso')
    h.make("sel_e1_miniRelIsoCorr",'ele_type','iso')
    h.make("sel_e1_mindRJets",'ele_type','dR')
    h.make("sel_e1_isPF",'ele_type','isPF')
    h.make("sel_e1_numTrkHits",'ele_type','numHits')
    h.make("sel_e1_numPixHits",'ele_type','numHits')
    h.make("sel_e1_numStripHits",'ele_type','numHits')
    h.make("sel_e1_mindPhiJets",'ele_type','abs_dphi')
    h.make("sel_e1_sigmaIetaIeta",'ele_type','sieie')
    h.make("sel_e1_absdEtaSeed",'ele_type','detaseed')
    h.make("sel_e1_absdPhiIn",'ele_type','abs_dphi')
    h.make("sel_e1_HOverE",'ele_type','HoverE')
    h.make("sel_e1_1E1p",'ele_type','EinvMinusPinv')
    h.make("sel_e1_expMissing",'ele_type','numMissingHits')
    h.make("sel_e1_passConvVeto",'ele_type','passConvVeto')
    h.make("sel_e1_IDscore",'ele_type','IDScore')

    h.make("sel_e2_pt",'ele_type','ele_pt')
    h.make("sel_e2_eta",'ele_type','eta')
    h.make("sel_e2_phi",'ele_type','phi')
    h.make("sel_e2_dxy",'ele_type','dxy')
    h.make("sel_e2_dxySignif",'ele_type','dxy_signif')
    h.make("sel_e2_trkChi2",'ele_type','trk_chi2')
    h.make('sel_e2_trkProb','ele_type','trkProb')
    h.make("sel_e2_trkRelIso",'ele_type','iso')
    h.make("sel_e2_calRelIso",'ele_type','iso')
    h.make("sel_e2_PFRelIso",'ele_type','iso')
    h.make("sel_e2_miniRelIso",'ele_type','iso')
    h.make("sel_e2_miniRelIsoCorr",'ele_type','iso')
    h.make("sel_e2_mindRJets",'ele_type','dR')
    h.make("sel_e2_isPF",'ele_type','isPF')
    h.make("sel_e2_numTrkHits",'ele_type','numHits')
    h.make("sel_e2_numPixHits",'ele_type','numHits')
    h.make("sel_e2_numStripHits",'ele_type','numHits')
    h.make("sel_e2_mindPhiJets",'ele_type','abs_dphi')
    h.make("sel_e2_sigmaIetaIeta",'ele_type','sieie')
    h.make("sel_e2_absdEtaSeed",'ele_type','detaseed')
    h.make("sel_e2_absdPhiIn",'ele_type','abs_dphi')
    h.make("sel_e2_HOverE",'ele_type','HoverE')
    h.make("sel_e2_1E1p",'ele_type','EinvMinusPinv')
    h.make("sel_e2_expMissing",'ele_type','numMissingHits')
    h.make("sel_e2_passConvVeto",'ele_type','passConvVeto')
    h.make("sel_e2_IDscore",'ele_type','IDScore')
    
    # selected vertex
    h.make("sel_vtx_dR",'vtx_type','dR')
    h.make("sel_vtx_mindxy",'vtx_type','dxy')
    h.make("sel_vtx_vxy1",'vtx_type','vxy1')
    h.make("sel_vtx_vxy10",'vtx_type','vxy10')
    h.make("sel_vtx_vxy100",'vtx_type','vxy100')
    h.make("sel_vtx_leadpT",'vtx_type','ele_pt')
    h.make("sel_vtx_METdPhi",'vtx_type','abs_dphi')
    h.make("sel_vtx_mindRj",'vtx_type','dR')
    h.make("sel_vtx_chi2",'vtx_type','vtx_chi2')
    h.make('sel_vtx_mass','vtx_type','vtx_mass')
    h.make('sel_vtx_mindPhiJ','vtx_type','abs_dphi')
    h.make('sel_vtx_sign','vtx_type','vtx_sign')
    h.make('sel_vtx_pt','vtx_type','vtx_pt')
    h.make('sel_vtx_eta','vtx_type','eta')
    h.make('sel_vtx_phi','vtx_type','phi')
    h.make("sel_vtx_type",'vtx_type')
    h.make("sel_vtx_minEleDrJ",'vtx_type','dR')
    h.make("sel_vtx_minEleDPhiJ",'vtx_type','abs_dphi')
    h.make("sel_vtx_mass_low",'vtx_type','mass_low')
    h.make("sel_vtx_mindxy_low",'vtx_type','mindxy_low')
    h.make("sel_vtx_sign_etaProd",'vtx_type','sign_etaProd')
    h.make("sel_vtx_CosThetaColl",'vtx_type','cosTheta')
    h.make("sel_vtx_LxyCosThetaColl",'vtx_type','LxyCosTheta')
    h.make("sel_vtx_LxyCosThetaCollZoom",'vtx_type','LxyCosThetaZoom')
    h.make("sel_vtx_LxyCosThetaCollZoomZoom",'vtx_type','LxyCosThetaZoomZoom')
    h.make("sel_vtx_eleDphi",'vtx_type','abs_dphi')
    h.make("sel_vtx_maxMiniRelIso",'vtx_type','iso')
    h.make("sel_vtx_maxMiniRelIsoCorr",'vtx_type','iso')
    h.make("sel_vtx_e1e2PassConvVeto",'vtx_type','passConvVeto')
    
    # misc other quantities
    h.make("PFMET",'met')
    h.make("jetMETdPhi",'abs_dphi')
    h.make("minJetMETdPhi",'abs_dphi')
    h.make("nJets",'nJets')
    h.make('lead_jet_pt','jet_pt')
    h.make('lead_jet_eta','eta')
    h.make("jetMETratio",'jetMETratio')

    # signal-only quantities
    if info['type'] == 'signal':
        # match/purity
        h.make('sel_vtx_isMatched','isMatched')
        h.make('sel_vtx_purity','vtxPurity')
        h.make('sel_vtx_recoCat','recoCategories')

        # quantities associated w/ gen objects
        h.make("gen_met",'met')
        h.make("gen_dR",'dR')
        h.make("gen_vxy1",'vxy1')
        h.make("gen_vxy10",'vxy10')
        h.make("gen_vxy100",'vxy100')
        h.make("gen_leadpT",'ele_pt')
        h.make("gen_vtx_METdPhi",'abs_dphi')
        h.make("gen_jetMETdPhi",'abs_dphi')
        h.make("gen_vtx_mass",'vtx_mass')
        h.make('gen_vtx_pt','vtx_pt')
        h.make('gen_vtx_eta','eta')
        h.make('gen_vtx_phi','phi')

        h.make('gen_ele_pt','ele_pt')
        h.make('gen_ele_eta','eta')
        h.make('gen_ele_phi','phi')
        h.make('gen_ele_vxy1','vxy1')
        h.make('gen_ele_vxy10','vxy10')
        h.make('gen_ele_vxy100','vxy100')
        h.make("gen_ele_r3", 'r3')
        h.make("gen_ele_r3_PVcorr", 'r3')

        # reco --> vertexing efficiency
        h.make("signalReco_vs_vtxMatch",'sigReco','vtxMatch')
        h.make("signalReco_vs_vtxMatch_unwgt",'sigReco','vtxMatch')

        # matched reco electron, reco variables
        h.make("match_ele_pt",'match_type','ele_pt')
        h.make("match_ele_eta",'match_type','eta')
        h.make("match_ele_phi",'match_type','phi')
        h.make("match_ele_dxy",'match_type','dxy')
        h.make("match_ele_dxySignif",'match_type','dxy_signif')
        h.make("match_ele_trkChi2",'match_type','trk_chi2')
        h.make('match_ele_trkProb','match_type','trkProb')
        h.make("match_ele_trkRelIso",'match_type','iso')
        h.make("match_ele_calRelIso",'match_type','iso')
        h.make("match_ele_PFRelIso",'match_type','iso')
        h.make("match_ele_miniRelIso",'match_type','iso')
        h.make("match_ele_miniRelIsoCorr",'match_type','iso')
        h.make("match_ele_mindRJets",'match_type','dR')
        h.make("match_ele_isPF",'match_type','isPF')
        h.make("match_ele_numTrkHits",'match_type','numHits')
        h.make("match_ele_numPixHits",'match_type','numHits')
        h.make("match_ele_numStripHits",'match_type','numHits')
        h.make("match_ele_mindPhiJets",'match_type','abs_dphi')
        h.make("match_ele_sigmaIetaIeta",'match_type','sieie')
        h.make("match_ele_absdEtaSeed",'match_type','detaseed')
        h.make("match_ele_absdPhiIn",'match_type','abs_dphi')
        h.make("match_ele_HOverE",'match_type','HoverE')
        h.make("match_ele_1E1p",'match_type','EinvMinusPinv')
        h.make("match_ele_expMissing",'match_type','numMissingHits')
        h.make("match_ele_passConvVeto",'match_type','passConvVeto')
        h.make("match_ele_IDscore",'match_type','IDScore')

        # fake reco electrons (not matched to a gen object)
        h.make("fake_ele_pt",'ele_type','ele_pt')
        h.make("fake_ele_eta",'ele_type','eta')
        h.make("fake_ele_phi",'ele_type','phi')
        h.make("fake_ele_dxy",'ele_type','dxy')
        h.make("fake_ele_dxySignif",'ele_type','dxy_signif')
        h.make("fake_ele_trkChi2",'ele_type','trk_chi2')
        h.make('fake_ele_trkProb','ele_type','trkProb')
        h.make("fake_ele_trkRelIso",'ele_type','iso')
        h.make("fake_ele_calRelIso",'ele_type','iso')
        h.make("fake_ele_PFRelIso",'ele_type','iso')
        h.make("fake_ele_miniRelIso",'ele_type','iso')
        h.make("fake_ele_miniRelIsoCorr",'ele_type','iso')
        h.make("fake_ele_mindRJets",'ele_type','dR')
        h.make("fake_ele_isPF",'ele_type','isPF')
        h.make("fake_ele_numTrkHits",'ele_type','numHits')
        h.make("fake_ele_numPixHits",'ele_type','numHits')
        h.make("fake_ele_numStripHits",'ele_type','numHits')
        h.make("fake_ele_mindPhiJets",'ele_type','abs_dphi')
        h.make("fake_ele_sigmaIetaIeta",'ele_type','sieie')
        h.make("fake_ele_absdEtaSeed",'ele_type','detaseed')
        h.make("fake_ele_absdPhiIn",'ele_type','abs_dphi')
        h.make("fake_ele_HOverE",'ele_type','HoverE')
        h.make("fake_ele_1E1p",'ele_type','EinvMinusPinv')
        h.make("fake_ele_expMissing",'ele_type','numMissingHits')
        h.make("fake_ele_passConvVeto",'ele_type','passConvVeto')
        h.make("fake_ele_IDscore",'ele_type','IDScore')
        
        # matched reco vertex
        h.make("match_vtx_dR",'vtx_type','dR')
        h.make("match_vtx_mindxy",'vtx_type','dxy')
        h.make("match_vtx_vxy1",'vtx_type','vxy1')
        h.make("match_vtx_vxy10",'vtx_type','vxy10')
        h.make("match_vtx_vxy100",'vtx_type','vxy100')
        h.make("match_vtx_leadpT",'vtx_type','ele_pt')
        h.make("match_vtx_METdPhi",'vtx_type','abs_dphi')
        h.make("match_vtx_mindRj",'vtx_type','dR')
        h.make("match_vtx_chi2",'vtx_type','vtx_chi2')
        h.make('match_vtx_mass','vtx_type','vtx_mass')
        h.make('match_vtx_mindPhiJ','vtx_type','abs_dphi')
        h.make('match_vtx_sign','vtx_type','vtx_sign')
        h.make('match_vtx_pt','vtx_type','vtx_pt')
        h.make('match_vtx_eta','vtx_type','eta')
        h.make('match_vtx_phi','vtx_type','phi')
        h.make("match_vtx_type",'vtx_type')
        h.make("match_vtx_minEleDrJ",'vtx_type','dR')
        h.make("match_vtx_minEleDPhiJ",'vtx_type','abs_dphi')
        h.make("match_vtx_mass_low",'vtx_type','mass_low')
        h.make("match_vtx_mindxy_low",'vtx_type','mindxy_low')
        h.make("match_vtx_sign_etaProd",'vtx_type','sign_etaProd')
        h.make("match_vtx_CosThetaColl",'vtx_type','cosTheta')
        h.make("match_vtx_LxyCosThetaColl",'vtx_type','LxyCosTheta')
        h.make("match_vtx_LxyCosThetaCollZoom",'vtx_type','LxyCosThetaZoom')
        h.make("match_vtx_LxyCosThetaCollZoomZoom",'vtx_type','LxyCosThetaZoomZoom')
        h.make("match_vtx_eleDphi",'vtx_type','abs_dphi')
        h.make("match_vtx_chi2Rank",'vtx_type','chi2Rank')
        h.make("match_vtx_maxMiniRelIso",'vtx_type','iso')
        h.make("match_vtx_maxMiniRelIsoCorr",'vtx_type','iso')
        h.make("match_vtx_e1e2PassConvVeto",'vtx_type','passConvVeto')

        # matched reco vertex, corresponding gen features
        h.make("match_vtx_gen_dR",'vtx_type','dR')
        h.make("match_vtx_gen_vxy1",'vtx_type','vxy1')
        h.make("match_vtx_gen_vxy10",'vtx_type','vxy10')
        h.make("match_vtx_gen_vxy100",'vtx_type','vxy100')
        h.make("match_vtx_gen_METdPhi",'vtx_type','abs_dphi')
        h.make("match_vtx_gen_mass",'vtx_type','vtx_mass')
        h.make('match_vtx_gen_pt','vtx_type','vtx_pt')
        h.make('match_vtx_gen_eta','vtx_type','eta')
        h.make('match_vtx_gen_phi','vtx_type','phi')

        # fake reco vertices
        h.make("fake_vtx_dR",'vtx_type','dR')
        h.make("fake_vtx_mindxy",'vtx_type','dxy')
        h.make("fake_vtx_vxy1",'vtx_type','vxy1')
        h.make("fake_vtx_vxy10",'vtx_type','vxy10')
        h.make("fake_vtx_vxy100",'vtx_type','vxy100')
        h.make("fake_vtx_leadpT",'vtx_type','ele_pt')
        h.make("fake_vtx_METdPhi",'vtx_type','abs_dphi')
        h.make("fake_vtx_mindRj",'vtx_type','dR')
        h.make("fake_vtx_chi2",'vtx_type','vtx_chi2')
        h.make('fake_vtx_mass','vtx_type','vtx_mass')
        h.make('fake_vtx_mindPhiJ','vtx_type','abs_dphi')
        h.make('fake_vtx_sign','vtx_type','vtx_sign')
        h.make('fake_vtx_pt','vtx_type','vtx_pt')
        h.make('fake_vtx_eta','vtx_type','eta')
        h.make('fake_vtx_phi','vtx_type','phi')
        h.make("fake_vtx_type",'vtx_type')
        h.make("fake_vtx_minEleDrJ",'vtx_type','dR')
        h.make("fake_vtx_minEleDPhiJ",'vtx_type','abs_dphi')
        h.make("fake_vtx_mass_low",'vtx_type','mass_low')
        h.make("fake_vtx_mindxy_low",'vtx_type','mindxy_low')
        h.make("fake_vtx_sign_etaProd",'vtx_type','sign_etaProd')
        h.make("fake_vtx_CosThetaColl",'vtx_type','cosTheta')
        h.make("fake_vtx_LxyCosThetaColl",'vtx_type','LxyCosTheta')
        h.make("fake_vtx_LxyCosThetaCollZoom",'vtx_type','LxyCosThetaZoom')
        h.make("fake_vtx_LxyCosThetaCollZoomZoom",'vtx_type','LxyCosThetaZoomZoom')
        h.make("fake_vtx_eleDphi",'vtx_type','abs_dphi')
        h.make("fake_vtx_maxMiniRelIso",'vtx_type','iso')
        h.make("fake_vtx_maxMiniRelIsoCorr",'vtx_type','iso')
        
    return h

subroutines = []

def fillHistos(events,h,samp,cut,info,sum_wgt=1):
    h.samp = samp
    h.cut = cut
    if info["type"] == "signal" or info["type"] == "bkg":
        wgt = events.eventWgt/sum_wgt
    else:
        wgt = 1

    sel_vtx = events.sel_vtx
    ### FILLING HISTOGRAMS ###
    
    #
    h.fill("sel_e1_pt",ele_type=sel_vtx.e1_typ,pt=sel_vtx.e1.pt,weight=wgt)
    h.fill("sel_e1_eta",ele_type=sel_vtx.e1_typ,eta=sel_vtx.e1.eta,weight=wgt)
    h.fill("sel_e1_phi",ele_type=sel_vtx.e1_typ,phi=sel_vtx.e1.phi,weight=wgt)
    h.fill("sel_e1_dxy",ele_type=sel_vtx.e1_typ,dxy=sel_vtx.e1.dxy,weight=wgt)
    h.fill("sel_e1_dxySignif",ele_type=sel_vtx.e1_typ,signif=np.abs(sel_vtx.e1.dxy)/sel_vtx.e1.dxyErr,weight=wgt)
    h.fill("sel_e1_trkChi2",ele_type=sel_vtx.e1_typ,chi2=sel_vtx.e1.trkChi2,weight=wgt)
    h.fill("sel_e1_trkProb",ele_type=sel_vtx.e1_typ,prob=sel_vtx.e1.trkProb)
    h.fill("sel_e1_trkRelIso",ele_type=sel_vtx.e1_typ,iso=sel_vtx.e1.trkRelIso,weight=wgt)
    h.fill("sel_e1_calRelIso",ele_type=sel_vtx.e1_typ,iso=sel_vtx.e1.calRelIso,weight=wgt)
    h.fill("sel_e1_PFRelIso",ele_type=sel_vtx.e1_typ,iso=sel_vtx.e1.PFRelIso,weight=wgt)
    h.fill("sel_e1_miniRelIso",ele_type=sel_vtx.e1_typ,iso=sel_vtx.e1.miniRelIso,weight=wgt)
    h.fill("sel_e1_miniRelIsoCorr",ele_type=sel_vtx.e1_typ,iso=sel_vtx.e1.miniRelIsoEleCorr,weight=wgt)
    h.fill("sel_e1_mindRJets",ele_type=sel_vtx.e1_typ,dR=sel_vtx.e1.mindRj,weight=wgt)
    h.fill("sel_e1_mindPhiJets",ele_type=sel_vtx.e1_typ,abs_dphi=np.abs(sel_vtx.e1.mindPhiJ),weight=wgt)
    h.fill('sel_e1_isPF',ele_type=sel_vtx.e1_typ,isPF=ak.values_astype(sel_vtx.e1.isPF,int),weight=wgt)
    h.fill('sel_e1_numTrkHits',ele_type=sel_vtx.e1_typ,numHits=sel_vtx.e1.numTrackerHits,weight=wgt)
    h.fill('sel_e1_numPixHits',ele_type=sel_vtx.e1_typ,numHits=sel_vtx.e1.numPixHits,weight=wgt)
    h.fill('sel_e1_numStripHits',ele_type=sel_vtx.e1_typ,numHits=sel_vtx.e1.numStripHits,weight=wgt)
    h.fill("sel_e1_sigmaIetaIeta",ele_type=sel_vtx.e1_typ,sieie=sel_vtx.e1.full55sigmaIetaIeta,weight=wgt)
    h.fill("sel_e1_absdEtaSeed",ele_type=sel_vtx.e1_typ,detaSeed=sel_vtx.e1.absdEtaSeed,weight=wgt)
    h.fill("sel_e1_absdPhiIn",ele_type=sel_vtx.e1_typ,abs_dphi=np.abs(sel_vtx.e1.absdPhiIn),weight=wgt)
    h.fill("sel_e1_HOverE",ele_type=sel_vtx.e1_typ,hoe=sel_vtx.e1.HoverE,weight=wgt)
    h.fill("sel_e1_1E1p",ele_type=sel_vtx.e1_typ,emp=sel_vtx.e1.abs1overEm1overP,weight=wgt)
    h.fill("sel_e1_expMissing",ele_type=sel_vtx.e1_typ,missing=sel_vtx.e1.expMissingInnerHits,weight=wgt)
    h.fill("sel_e1_passConvVeto",ele_type=sel_vtx.e1_typ,passVeto=sel_vtx.e1.conversionVeto,weight=wgt)
    h.fill("sel_e1_IDscore",ele_type=sel_vtx.e1_typ,id=sel_vtx.e1.IDscore,weight=wgt)

    h.fill("sel_e2_pt",ele_type=sel_vtx.e2_typ,pt=sel_vtx.e2.pt,weight=wgt)
    h.fill("sel_e2_eta",ele_type=sel_vtx.e2_typ,eta=sel_vtx.e2.eta,weight=wgt)
    h.fill("sel_e2_phi",ele_type=sel_vtx.e2_typ,phi=sel_vtx.e2.phi,weight=wgt)
    h.fill("sel_e2_dxy",ele_type=sel_vtx.e2_typ,dxy=sel_vtx.e2.dxy,weight=wgt)
    h.fill("sel_e2_dxySignif",ele_type=sel_vtx.e2_typ,signif=np.abs(sel_vtx.e2.dxy)/sel_vtx.e2.dxyErr,weight=wgt)
    h.fill("sel_e2_trkChi2",ele_type=sel_vtx.e2_typ,chi2=sel_vtx.e2.trkChi2,weight=wgt)
    h.fill("sel_e2_trkProb",ele_type=sel_vtx.e2_typ,prob=sel_vtx.e2.trkProb)
    h.fill("sel_e2_trkRelIso",ele_type=sel_vtx.e2_typ,iso=sel_vtx.e2.trkRelIso,weight=wgt)
    h.fill("sel_e2_calRelIso",ele_type=sel_vtx.e2_typ,iso=sel_vtx.e2.calRelIso,weight=wgt)
    h.fill("sel_e2_PFRelIso",ele_type=sel_vtx.e2_typ,iso=sel_vtx.e2.PFRelIso,weight=wgt)
    h.fill("sel_e2_miniRelIso",ele_type=sel_vtx.e2_typ,iso=sel_vtx.e2.miniRelIso,weight=wgt)
    h.fill("sel_e2_miniRelIsoCorr",ele_type=sel_vtx.e2_typ,iso=sel_vtx.e2.miniRelIsoEleCorr,weight=wgt)
    h.fill("sel_e2_mindRJets",ele_type=sel_vtx.e2_typ,dR=sel_vtx.e2.mindRj,weight=wgt)
    h.fill("sel_e2_mindPhiJets",ele_type=sel_vtx.e2_typ,abs_dphi=np.abs(sel_vtx.e2.mindPhiJ),weight=wgt)
    h.fill('sel_e2_isPF',ele_type=sel_vtx.e2_typ,isPF=ak.values_astype(sel_vtx.e2.isPF,int),weight=wgt)
    h.fill('sel_e2_numTrkHits',ele_type=sel_vtx.e2_typ,numHits=sel_vtx.e2.numTrackerHits,weight=wgt)
    h.fill('sel_e2_numPixHits',ele_type=sel_vtx.e2_typ,numHits=sel_vtx.e2.numPixHits,weight=wgt)
    h.fill('sel_e2_numStripHits',ele_type=sel_vtx.e2_typ,numHits=sel_vtx.e2.numStripHits,weight=wgt)
    h.fill("sel_e2_sigmaIetaIeta",ele_type=sel_vtx.e2_typ,sieie=sel_vtx.e2.full55sigmaIetaIeta,weight=wgt)
    h.fill("sel_e2_absdEtaSeed",ele_type=sel_vtx.e2_typ,detaSeed=sel_vtx.e2.absdEtaSeed,weight=wgt)
    h.fill("sel_e2_absdPhiIn",ele_type=sel_vtx.e2_typ,abs_dphi=np.abs(sel_vtx.e2.absdPhiIn),weight=wgt)
    h.fill("sel_e2_HOverE",ele_type=sel_vtx.e2_typ,hoe=sel_vtx.e2.HoverE,weight=wgt)
    h.fill("sel_e2_1E1p",ele_type=sel_vtx.e2_typ,emp=sel_vtx.e2.abs1overEm1overP,weight=wgt)
    h.fill("sel_e2_expMissing",ele_type=sel_vtx.e2_typ,missing=sel_vtx.e2.expMissingInnerHits,weight=wgt)
    h.fill("sel_e2_passConvVeto",ele_type=sel_vtx.e2_typ,passVeto=sel_vtx.e2.conversionVeto,weight=wgt)
    h.fill("sel_e2_IDscore",ele_type=sel_vtx.e2_typ,id=sel_vtx.e2.IDscore,weight=wgt)

    #
    h.fill("sel_vtx_dR",vtype=sel_vtx.typ,dR=sel_vtx.dR,weight=wgt)
    h.fill("sel_vtx_mindxy",vtype=sel_vtx.typ,dxy=sel_vtx.min_dxy,weight=wgt)
    h.fill("sel_vtx_vxy1",vtype=sel_vtx.typ,vxy=sel_vtx.vxy,weight=wgt)
    h.fill("sel_vtx_vxy10",vtype=sel_vtx.typ,vxy=sel_vtx.vxy,weight=wgt)
    h.fill("sel_vtx_vxy100",vtype=sel_vtx.typ,vxy=sel_vtx.vxy,weight=wgt)
    h.fill("sel_vtx_leadpT",vtype=sel_vtx.typ,pt=np.maximum(sel_vtx.e1.pt,sel_vtx.e2.pt),weight=wgt)
    h.fill("sel_vtx_METdPhi",vtype=sel_vtx.typ,abs_dphi=np.abs(sel_vtx.METdPhi),weight=wgt)
    h.fill('sel_vtx_mindRj',vtype=sel_vtx.typ,dR=sel_vtx.mindRj,weight=wgt)
    h.fill('sel_vtx_chi2',vtype=sel_vtx.typ,chi2=sel_vtx.reduced_chi2,weight=wgt)
    h.fill('sel_vtx_mass',vtype=sel_vtx.typ,mass=sel_vtx.m,weight=wgt)
    h.fill('sel_vtx_mindPhiJ',vtype=sel_vtx.typ,abs_dphi=np.abs(sel_vtx.mindPhiJ),weight=wgt)
    h.fill('sel_vtx_sign',vtype=sel_vtx.typ,sign=sel_vtx.sign,weight=wgt)
    h.fill('sel_vtx_pt',vtype=sel_vtx.typ,pt=sel_vtx.pt,weight=wgt)
    h.fill('sel_vtx_eta',vtype=sel_vtx.typ,eta=sel_vtx.eta,weight=wgt)
    h.fill('sel_vtx_phi',vtype=sel_vtx.typ,phi=sel_vtx.phi,weight=wgt)
    h.fill('sel_vtx_type',vtype=sel_vtx.typ,weight=wgt)
    h.fill("sel_vtx_minEleDrJ",vtype=sel_vtx.typ,dR=np.minimum(sel_vtx.e1.mindRj,sel_vtx.e2.mindRj),weight=wgt)
    h.fill("sel_vtx_minEleDPhiJ",vtype=sel_vtx.typ,abs_dphi=np.minimum(sel_vtx.e1.mindPhiJ,sel_vtx.e2.mindPhiJ),weight=wgt)
    h.fill("sel_vtx_mass_low",vtype=sel_vtx.typ,mass_low=sel_vtx.m,weight=wgt)
    h.fill("sel_vtx_mindxy_low",vtype=sel_vtx.typ,mindxy_low=sel_vtx.min_dxy,weight=wgt)
    h.fill("sel_vtx_sign_etaProd",vtype=sel_vtx.typ,sign_etaProd=ak.values_astype(np.sign(sel_vtx.e1.eta*sel_vtx.e2.eta),int),weight=wgt)
    h.fill("sel_vtx_CosThetaColl",vtype=sel_vtx.typ,cosTheta=sel_vtx.cos_collinear,weight=wgt)
    h.fill("sel_vtx_LxyCosThetaColl",vtype=sel_vtx.typ,LxyCosTheta=sel_vtx.projectedLxy,weight=wgt)
    h.fill("sel_vtx_LxyCosThetaCollZoom",vtype=sel_vtx.typ,LxyCosThetaZoom=sel_vtx.projectedLxy,weight=wgt)
    h.fill("sel_vtx_LxyCosThetaCollZoomZoom",vtype=sel_vtx.typ,LxyCosThetaZoomZoom=sel_vtx.projectedLxy,weight=wgt)
    h.fill("sel_vtx_eleDphi",vtype=sel_vtx.typ,abs_dphi=sel_vtx.eleDphi,weight=wgt)
    h.fill("sel_vtx_maxMiniRelIso",vtype=sel_vtx.typ,iso=np.maximum(sel_vtx.e1.miniRelIso,sel_vtx.e2.miniRelIso),weight=wgt)
    h.fill("sel_vtx_maxMiniRelIsoCorr",vtype=sel_vtx.typ,iso=np.maximum(sel_vtx.e1.miniRelIsoEleCorr,sel_vtx.e2.miniRelIsoEleCorr),weight=wgt)
    h.fill("sel_vtx_e1e2PassConvVeto",vtype=sel_vtx.typ,passVeto=ak.values_astype((sel_vtx.e1.conversionVeto) & (sel_vtx.e2.conversionVeto),int),weight=wgt)


    #
    h.fill("PFMET",met=events.PFMET.pt,weight=wgt)
    h.fill("jetMETdPhi",abs_dphi=np.abs(events.PFJet.METdPhi[:,0]),weight=wgt)
    h.fill("minJetMETdPhi",abs_dphi=ak.min(np.abs(events.PFJet.METdPhi),axis=1),weight=wgt)
    h.fill("nJets",nJets=ak.count(events.PFJet.pt,axis=1),weight=wgt)
    h.fill("lead_jet_pt",jet_pt=events.PFJet.pt[:,0],weight=wgt)
    h.fill("lead_jet_eta",eta=events.PFJet.eta[:,0],weight=wgt)
    h.fill("jetMETratio",jetMETratio=events.PFJet.pt[:,0]/events.PFMET.pt,weight=wgt)

    if info['type'] == 'signal':
        h.fill('sel_vtx_isMatched',matched=sel_vtx.isMatched,weight=wgt)
        useBaseID = info['extras_useBaseID'] if 'extras_useBaseID' in info.keys() else False
        
        h.fill('sel_vtx_purity',purity='total',weight=np.sum(wgt))
        h.fill('sel_vtx_purity',purity='n_matched_any',weight=np.sum(wgt[ak.any(events.vtx.isMatched,axis=1)]))
        h.fill('sel_vtx_purity',purity='n_matched_good',weight=np.sum(wgt[ak.any(events.good_vtx.isMatched,axis=1)]))
        h.fill('sel_vtx_purity',purity='n_matched_sel',weight=np.sum(wgt[sel_vtx.isMatched]))
        h.fill('sel_vtx_purity',purity='n_eeReco_any',weight=np.sum(wgt[events.signalReconstructed]))
        if useBaseID:
            h.fill('sel_vtx_purity',purity='n_eeReco_passID',weight=np.sum(wgt[events.signalReconstructed & (events.GenEle.matchPassIDBasic==1) & (events.GenPos.matchPassIDBasic==1)]))
        else:
            h.fill('sel_vtx_purity',purity='n_eeReco_passID',weight=np.sum(wgt[events.signalReconstructed & (events.GenEle.matchPassIDBasic==1) & (events.GenPos.matchPassIDBasic==1)]))
        h.fill('sel_vtx_purity',purity='n_vtxReco_good',weight=np.sum(wgt[events.signalReconstructed & ak.any(events.good_vtx.isMatched,axis=1)]))
        h.fill('sel_vtx_purity',purity='n_vtxReco_any',weight=np.sum(wgt[events.signalReconstructed & ak.any(events.vtx.isMatched,axis=1)]))

        h.fill('sel_vtx_recoCat',recoCat='total',weight=np.sum(wgt))
        h.fill('sel_vtx_recoCat',recoCat='noEEreco',weight=np.sum(wgt[~events.signalReconstructed]))
        if useBaseID:
            eeReco_noID = events.signalReconstructed & ((events.GenEle.matchPassIDBasic==0) | (events.GenPos.matchPassIDBasic==0))
            eeReco_passID = events.signalReconstructed & (events.GenEle.matchPassIDBasic==1) & (events.GenPos.matchPassIDBasic==1)
        else:
            eeReco_noID = events.signalReconstructed & ((events.GenEle.matchPassID==0) | (events.GenPos.matchPassID==0))
            eeReco_passID = events.signalReconstructed & (events.GenEle.matchPassID==1) & (events.GenPos.matchPassID==1)
        h.fill('sel_vtx_recoCat',recoCat='eeReco_noID',weight=np.sum(wgt[eeReco_noID]))
        h.fill('sel_vtx_recoCat',recoCat='eeReco_ID_noVtx',weight=np.sum(wgt[eeReco_passID & ~ak.any(events.vtx.isMatched,axis=1)]))
        h.fill('sel_vtx_recoCat',recoCat='eeReco_ID_hasVtx_bad',weight=np.sum(wgt[eeReco_passID & ak.any(events.vtx.isMatched,axis=1) & ~ak.any(events.good_vtx.isMatched)]))
        h.fill('sel_vtx_recoCat',recoCat='eeReco_ID_hasVtx_good_unSel',weight=np.sum(wgt[eeReco_passID & ak.any(events.vtx.isMatched,axis=1)\
                                                                                            & ak.any(events.good_vtx.isMatched) & ~events.sel_vtx.isMatched]))
        h.fill('sel_vtx_recoCat',recoCat='eeReco_ID_hasVtx_good_sel',weight=np.sum(wgt[eeReco_passID & ak.any(events.vtx.isMatched,axis=1)\
                                                                                            & ak.any(events.good_vtx.isMatched) & events.sel_vtx.isMatched]))

        hasMatch_pf = (ak.count(events.Electron.pt,axis=1)>0) &\
                      (ak.count_nonzero(events.Electron.genMatched & events.Electron.passID,axis=1)>0)

        hasMatch_lpt = (ak.count(events.LptElectron.pt,axis=1)>0) &\
                       (ak.count_nonzero(events.LptElectron.genMatched & events.LptElectron.passID,axis=1)>0)

        match_pf = events[hasMatch_pf].Electron
        match_pf = match_pf[match_pf.genMatched & match_pf.passID]
        genObj_pf = ak.where(match_pf.matchType==-1,events[hasMatch_pf].GenEle,events[hasMatch_pf].GenPos)
        match_pf = ak.flatten(match_pf)
        genObj_pf = ak.flatten(genObj_pf)

        match_lpt = events[hasMatch_lpt].LptElectron
        match_lpt = match_lpt[match_lpt.genMatched & match_lpt.passID]
        genObj_lpt = ak.where(match_lpt.matchType==-1,events[hasMatch_lpt].GenEle,events[hasMatch_lpt].GenPos)
        match_lpt = ak.flatten(match_lpt)
        genObj_lpt = ak.flatten(genObj_lpt)

        fake_pf = ak.flatten(events.Electron[~events.Electron.genMatched & events.Electron.passID])
        fake_lpt = ak.flatten(events.LptElectron[~events.LptElectron.genMatched & events.LptElectron.passID])

        match_vtx_cut = events.good_vtx.isMatched
        fake_vtx_cut = ~events.good_vtx.isMatched
        match_vtx = ak.flatten(events.good_vtx[match_vtx_cut])
        match_vtx_genObj = events.genEE[ak.any(match_vtx_cut,axis=1)]
        match_vtx_wgt = wgt[ak.any(match_vtx_cut,axis=1)]
        fake_vtx = ak.flatten(events.good_vtx[fake_vtx_cut])

        hasMatch_vtx = ak.count_nonzero(events.good_vtx.isMatched,axis=1) > 0
        match_vtx_chi2Sort = ak.argsort(events[hasMatch_vtx].good_vtx.reduced_chi2,axis=1)
        match_vtx_chi2Rank = ak.flatten(match_vtx_chi2Sort[events[hasMatch_vtx].good_vtx.isMatched])

        hasMatchVtx = ak.values_astype(ak.any(events.vtx.isMatched,axis=1),int)
        signalReconstructed = ak.values_astype(events.signalReconstructed,int)

        gen_r3 = np.sqrt(events.GenEle.vx**2 + events.GenEle.vy**2 + events.GenEle.vz**2)
        gen_r3PV = np.sqrt((events.GenEle.vx - events.PV.x)**2 + (events.GenEle.vy - events.PV.y)**2 + (events.GenEle.vz - events.PV.z)**2)

        # fill histos
        h.fill("gen_met",met=events.GenMET.pt,weight=wgt)
        h.fill("gen_dR",dR=events.genEE.dr,weight=wgt)
        h.fill("gen_vxy1",vxy=events.GenEle.vxy,weight=wgt)
        h.fill("gen_vxy10",vxy=events.GenEle.vxy,weight=wgt)
        h.fill("gen_vxy100",vxy=events.GenEle.vxy,weight=wgt)
        h.fill("gen_leadpT",pt=np.maximum(events.GenEle.pt,events.GenPos.pt),weight=wgt)
        h.fill("gen_vtx_METdPhi",abs_dphi=np.abs(events.genEE.METdPhi),weight=wgt)
        h.fill("gen_jetMETdPhi",abs_dphi=np.abs(events.GenJetMETdPhi),weight=wgt)
        h.fill("gen_vtx_mass",mass=events.genEE.mass,weight=wgt)
        h.fill('gen_vtx_pt',pt=events.genEE.pt,weight=wgt)
        h.fill('gen_vtx_eta',eta=events.genEE.eta,weight=wgt)
        h.fill('gen_vtx_phi',phi=events.genEE.phi,weight=wgt)
        
        h.fill("gen_ele_pt",pt=events.GenEle.pt,weight=wgt)
        h.fill("gen_ele_pt",pt=events.GenPos.pt,weight=wgt)
        h.fill("gen_ele_vxy1",vxy=events.GenEle.vxy,weight=wgt)
        h.fill("gen_ele_vxy1",vxy=events.GenPos.vxy,weight=wgt)
        h.fill("gen_ele_vxy10",vxy=events.GenEle.vxy,weight=wgt)
        h.fill("gen_ele_vxy10",vxy=events.GenPos.vxy,weight=wgt)
        h.fill("gen_ele_vxy100",vxy=events.GenEle.vxy,weight=wgt)
        h.fill("gen_ele_vxy100",vxy=events.GenPos.vxy,weight=wgt)
        h.fill("gen_ele_eta",eta=events.GenEle.eta,weight=wgt)
        h.fill("gen_ele_eta",eta=events.GenPos.eta,weight=wgt)
        h.fill("gen_ele_phi",phi=events.GenEle.phi,weight=wgt)
        h.fill("gen_ele_phi",phi=events.GenPos.phi,weight=wgt)
        h.fill("gen_ele_r3",r3=gen_r3,weight=wgt)
        h.fill("gen_ele_r3_PVcorr",r3=gen_r3PV,weight=wgt)
        
        #
        h.fill('signalReco_vs_vtxMatch',reco=signalReconstructed,match=hasMatchVtx,weight=wgt)
        h.fill('signalReco_vs_vtxMatch_unwgt',reco=signalReconstructed,match=hasMatchVtx,weight=1)  
        
        #
        h.fill("match_ele_pt",match_type='R',pt=match_pf.pt,weight=1)
        h.fill("match_ele_eta",match_type='R',eta=match_pf.eta,weight=1)
        h.fill("match_ele_phi",match_type='R',phi=match_pf.phi,weight=1)
        h.fill("match_ele_dxy",match_type='R',dxy=match_pf.dxy,weight=1)
        h.fill("match_ele_dxySignif",match_type='R',signif=np.abs(match_pf.dxy)/match_pf.dxyErr,weight=1)
        h.fill("match_ele_trkChi2",match_type='R',chi2=match_pf.trkChi2,weight=1)
        h.fill("match_ele_trkProb",match_type='R',prob=match_pf.trkProb)
        h.fill("match_ele_trkRelIso",match_type='R',iso=match_pf.trkRelIso,weight=1)
        h.fill("match_ele_calRelIso",match_type='R',iso=match_pf.calRelIso,weight=1)
        h.fill("match_ele_PFRelIso",match_type='R',iso=match_pf.PFRelIso,weight=1)
        h.fill("match_ele_miniRelIso",match_type='R',iso=match_pf.miniRelIso,weight=1)
        h.fill("match_ele_miniRelIsoCorr",match_type='R',iso=match_pf.miniRelIsoEleCorr,weight=1)
        h.fill("match_ele_mindRJets",match_type='R',dR=match_pf.mindRj,weight=1)
        h.fill("match_ele_mindPhiJets",match_type='R',abs_dphi=np.abs(match_pf.mindPhiJ),weight=1)
        h.fill('match_ele_isPF',match_type='R',isPF=ak.values_astype(match_pf.isPF,int),weight=1)
        h.fill('match_ele_numTrkHits',match_type='R',numHits=match_pf.numTrackerHits,weight=1)
        h.fill('match_ele_numPixHits',match_type='R',numHits=match_pf.numPixHits,weight=1)
        h.fill('match_ele_numStripHits',match_type='R',numHits=match_pf.numStripHits,weight=1)
        h.fill("match_ele_sigmaIetaIeta",match_type='R',sieie=match_pf.full55sigmaIetaIeta,weight=1)
        h.fill("match_ele_absdEtaSeed",match_type='R',detaSeed=match_pf.absdEtaSeed,weight=1)
        h.fill("match_ele_absdPhiIn",match_type='R',abs_dphi=np.abs(match_pf.absdPhiIn),weight=1)
        h.fill("match_ele_HOverE",match_type='R',hoe=match_pf.HoverE,weight=1)
        h.fill("match_ele_1E1p",match_type='R',emp=match_pf.abs1overEm1overP,weight=1)
        h.fill("match_ele_expMissing",match_type='R',missing=match_pf.expMissingInnerHits,weight=1)
        h.fill("match_ele_passConvVeto",match_type='R',passVeto=match_pf.conversionVeto,weight=1)
        h.fill("match_ele_IDscore",match_type='R',id=match_pf.IDscore,weight=1)


        h.fill("match_ele_pt",match_type='L',pt=match_lpt.pt,weight=1)
        h.fill("match_ele_eta",match_type='L',eta=match_lpt.eta,weight=1)
        h.fill("match_ele_phi",match_type='L',phi=match_lpt.phi,weight=1)
        h.fill("match_ele_dxy",match_type='L',dxy=match_lpt.dxy,weight=1)
        h.fill("match_ele_dxySignif",match_type='L',signif=np.abs(match_lpt.dxy)/match_lpt.dxyErr,weight=1)
        h.fill("match_ele_trkChi2",match_type='L',chi2=match_lpt.trkChi2,weight=1)
        h.fill("match_ele_trkProb",match_type='L',prob=match_lpt.trkProb)
        h.fill("match_ele_trkRelIso",match_type='L',iso=match_lpt.trkRelIso,weight=1)
        h.fill("match_ele_calRelIso",match_type='L',iso=match_lpt.calRelIso,weight=1)
        h.fill("match_ele_PFRelIso",match_type='L',iso=match_lpt.PFRelIso,weight=1)
        h.fill("match_ele_miniRelIso",match_type='L',iso=match_lpt.miniRelIso,weight=1)
        h.fill("match_ele_miniRelIsoCorr",match_type='L',iso=match_lpt.miniRelIsoEleCorr,weight=1)
        h.fill("match_ele_mindRJets",match_type='L',dR=match_lpt.mindRj,weight=1)
        h.fill("match_ele_mindPhiJets",match_type='L',abs_dphi=np.abs(match_lpt.mindPhiJ),weight=1)
        h.fill('match_ele_isPF',match_type='L',isPF=ak.values_astype(match_lpt.isPF,int),weight=1)
        h.fill('match_ele_numTrkHits',match_type='L',numHits=match_lpt.numTrackerHits,weight=1)
        h.fill('match_ele_numPixHits',match_type='L',numHits=match_lpt.numPixHits,weight=1)
        h.fill('match_ele_numStripHits',match_type='L',numHits=match_lpt.numStripHits,weight=1)
        h.fill("match_ele_sigmaIetaIeta",match_type='L',sieie=match_lpt.full55sigmaIetaIeta,weight=1)
        h.fill("match_ele_absdEtaSeed",match_type='L',detaSeed=match_lpt.absdEtaSeed,weight=1)
        h.fill("match_ele_absdPhiIn",match_type='L',abs_dphi=np.abs(match_lpt.absdPhiIn),weight=1)
        h.fill("match_ele_HOverE",match_type='L',hoe=match_lpt.HoverE,weight=1)
        h.fill("match_ele_1E1p",match_type='L',emp=match_lpt.abs1overEm1overP,weight=1)
        h.fill("match_ele_expMissing",match_type='L',missing=match_lpt.expMissingInnerHits,weight=1)
        h.fill("match_ele_passConvVeto",match_type='L',passVeto=match_lpt.conversionVeto,weight=1)
        h.fill("match_ele_IDscore",match_type='L',id=match_lpt.IDscore,weight=1)

        #
        h.fill("fake_ele_pt",ele_type='R',pt=fake_pf.pt,weight=1)
        h.fill("fake_ele_eta",ele_type='R',eta=fake_pf.eta,weight=1)
        h.fill("fake_ele_phi",ele_type='R',phi=fake_pf.phi,weight=1)
        h.fill("fake_ele_dxy",ele_type='R',dxy=fake_pf.dxy,weight=1)
        h.fill("fake_ele_dxySignif",ele_type='R',signif=np.abs(fake_pf.dxy)/fake_pf.dxyErr,weight=1)
        h.fill("fake_ele_trkChi2",ele_type='R',chi2=fake_pf.trkChi2,weight=1)
        h.fill("fake_ele_trkProb",ele_type='R',prob=fake_pf.trkProb)
        h.fill("fake_ele_trkRelIso",ele_type='R',iso=fake_pf.trkRelIso,weight=1)
        h.fill("fake_ele_calRelIso",ele_type='R',iso=fake_pf.calRelIso,weight=1)
        h.fill("fake_ele_PFRelIso",ele_type='R',iso=fake_pf.PFRelIso,weight=1)
        h.fill("fake_ele_miniRelIso",ele_type='R',iso=fake_pf.miniRelIso,weight=1)
        h.fill("fake_ele_miniRelIsoCorr",ele_type='R',iso=fake_pf.miniRelIsoEleCorr,weight=1)
        h.fill("fake_ele_mindRJets",ele_type='R',dR=fake_pf.mindRj,weight=1)
        h.fill("fake_ele_mindPhiJets",ele_type='R',abs_dphi=np.abs(fake_pf.mindPhiJ),weight=1)
        h.fill('fake_ele_isPF',ele_type='R',isPF=ak.values_astype(fake_pf.isPF,int),weight=1)
        h.fill('fake_ele_numTrkHits',ele_type='R',numHits=fake_pf.numTrackerHits,weight=1)
        h.fill('fake_ele_numPixHits',ele_type='R',numHits=fake_pf.numPixHits,weight=1)
        h.fill('fake_ele_numStripHits',ele_type='R',numHits=fake_pf.numStripHits,weight=1)
        h.fill("fake_ele_sigmaIetaIeta",ele_type='R',sieie=fake_pf.full55sigmaIetaIeta,weight=1)
        h.fill("fake_ele_absdEtaSeed",ele_type='R',detaSeed=fake_pf.absdEtaSeed,weight=1)
        h.fill("fake_ele_absdPhiIn",ele_type='R',abs_dphi=np.abs(fake_pf.absdPhiIn),weight=1)
        h.fill("fake_ele_HOverE",ele_type='R',hoe=fake_pf.HoverE,weight=1)
        h.fill("fake_ele_1E1p",ele_type='R',emp=fake_pf.abs1overEm1overP,weight=1)
        h.fill("fake_ele_expMissing",ele_type='R',missing=fake_pf.expMissingInnerHits,weight=1)
        h.fill("fake_ele_passConvVeto",ele_type='R',passVeto=fake_pf.conversionVeto,weight=1)
        h.fill("fake_ele_IDscore",ele_type='R',id=fake_pf.IDscore,weight=1)

        h.fill("fake_ele_pt",ele_type='L',pt=fake_lpt.pt,weight=1)
        h.fill("fake_ele_eta",ele_type='L',eta=fake_lpt.eta,weight=1)
        h.fill("fake_ele_phi",ele_type='L',phi=fake_lpt.phi,weight=1)
        h.fill("fake_ele_dxy",ele_type='L',dxy=fake_lpt.dxy,weight=1)
        h.fill("fake_ele_dxySignif",ele_type='L',signif=np.abs(fake_lpt.dxy)/fake_lpt.dxyErr,weight=1)
        h.fill("fake_ele_trkChi2",ele_type='L',chi2=fake_lpt.trkChi2,weight=1)
        h.fill("fake_ele_trkProb",ele_type='L',prob=fake_lpt.trkProb)
        h.fill("fake_ele_trkRelIso",ele_type='L',iso=fake_lpt.trkRelIso,weight=1)
        h.fill("fake_ele_calRelIso",ele_type='L',iso=fake_lpt.calRelIso,weight=1)
        h.fill("fake_ele_PFRelIso",ele_type='L',iso=fake_lpt.PFRelIso,weight=1)
        h.fill("fake_ele_miniRelIso",ele_type='L',iso=fake_lpt.miniRelIso,weight=1)
        h.fill("fake_ele_miniRelIsoCorr",ele_type='L',iso=fake_lpt.miniRelIsoEleCorr,weight=1)
        h.fill("fake_ele_mindRJets",ele_type='L',dR=fake_lpt.mindRj,weight=1)
        h.fill("fake_ele_mindPhiJets",ele_type='L',abs_dphi=np.abs(fake_lpt.mindPhiJ),weight=1)
        h.fill('fake_ele_isPF',ele_type='L',isPF=ak.values_astype(fake_lpt.isPF,int),weight=1)
        h.fill('fake_ele_numTrkHits',ele_type='L',numHits=fake_lpt.numTrackerHits,weight=1)
        h.fill('fake_ele_numPixHits',ele_type='L',numHits=fake_lpt.numPixHits,weight=1)
        h.fill('fake_ele_numStripHits',ele_type='L',numHits=fake_lpt.numStripHits,weight=1)
        h.fill("fake_ele_sigmaIetaIeta",ele_type='L',sieie=fake_lpt.full55sigmaIetaIeta,weight=1)
        h.fill("fake_ele_absdEtaSeed",ele_type='L',detaSeed=fake_lpt.absdEtaSeed,weight=1)
        h.fill("fake_ele_absdPhiIn",ele_type='L',abs_dphi=np.abs(fake_lpt.absdPhiIn),weight=1)
        h.fill("fake_ele_HOverE",ele_type='L',hoe=fake_lpt.HoverE,weight=1)
        h.fill("fake_ele_1E1p",ele_type='L',emp=fake_lpt.abs1overEm1overP,weight=1)
        h.fill("fake_ele_expMissing",ele_type='L',missing=fake_lpt.expMissingInnerHits,weight=1)
        h.fill("fake_ele_passConvVeto",ele_type='L',passVeto=fake_lpt.conversionVeto,weight=1)
        h.fill("fake_ele_IDscore",ele_type='L',id=fake_lpt.IDscore,weight=1)

        #
        h.fill("match_vtx_dR",vtype=match_vtx.typ,dR=match_vtx.dR,weight=1)
        h.fill("match_vtx_mindxy",vtype=match_vtx.typ,dxy=match_vtx.min_dxy,weight=1)
        h.fill("match_vtx_vxy1",vtype=match_vtx.typ,vxy=match_vtx.vxy,weight=1)
        h.fill("match_vtx_vxy10",vtype=match_vtx.typ,vxy=match_vtx.vxy,weight=1)
        h.fill("match_vtx_vxy100",vtype=match_vtx.typ,vxy=match_vtx.vxy,weight=1)
        h.fill("match_vtx_leadpT",vtype=match_vtx.typ,pt=np.maximum(match_vtx.e1.pt,match_vtx.e2.pt),weight=1)
        h.fill("match_vtx_METdPhi",vtype=match_vtx.typ,abs_dphi=np.abs(match_vtx.METdPhi),weight=1)
        h.fill('match_vtx_mindRj',vtype=match_vtx.typ,dR=match_vtx.mindRj,weight=1)
        h.fill('match_vtx_chi2',vtype=match_vtx.typ,chi2=match_vtx.reduced_chi2,weight=1)
        h.fill('match_vtx_mass',vtype=match_vtx.typ,mass=match_vtx.m,weight=1)
        h.fill('match_vtx_mindPhiJ',vtype=match_vtx.typ,abs_dphi=np.abs(match_vtx.mindPhiJ),weight=1)
        h.fill('match_vtx_sign',vtype=match_vtx.typ,sign=match_vtx.sign,weight=1)
        h.fill('match_vtx_pt',vtype=match_vtx.typ,pt=match_vtx.pt,weight=1)
        h.fill('match_vtx_eta',vtype=match_vtx.typ,eta=match_vtx.eta,weight=1)
        h.fill('match_vtx_phi',vtype=match_vtx.typ,phi=match_vtx.phi,weight=1)
        h.fill('match_vtx_type',vtype=match_vtx.typ,weight=1)
        h.fill("match_vtx_minEleDrJ",vtype=match_vtx.typ,dR=np.minimum(match_vtx.e1.mindRj,match_vtx.e2.mindRj),weight=1)
        h.fill("match_vtx_minEleDPhiJ",vtype=match_vtx.typ,abs_dphi=np.minimum(match_vtx.e1.mindPhiJ,match_vtx.e2.mindPhiJ),weight=1)
        h.fill("match_vtx_mass_low",vtype=match_vtx.typ,mass_low=match_vtx.m,weight=1)
        h.fill("match_vtx_mindxy_low",vtype=match_vtx.typ,mindxy_low=match_vtx.min_dxy,weight=1)
        h.fill("match_vtx_sign_etaProd",vtype=match_vtx.typ,sign_etaProd=ak.values_astype(np.sign(match_vtx.e1.eta*match_vtx.e2.eta),int),weight=1)
        h.fill("match_vtx_CosThetaColl",vtype=match_vtx.typ,cosTheta=match_vtx.cos_collinear,weight=1)
        h.fill("match_vtx_LxyCosThetaColl",vtype=match_vtx.typ,LxyCosTheta=match_vtx.projectedLxy,weight=1)
        h.fill("match_vtx_LxyCosThetaCollZoom",vtype=match_vtx.typ,LxyCosThetaZoom=match_vtx.projectedLxy,weight=1)
        h.fill("match_vtx_LxyCosThetaCollZoomZoom",vtype=match_vtx.typ,LxyCosThetaZoomZoom=match_vtx.projectedLxy,weight=1)
        h.fill("match_vtx_eleDphi",vtype=match_vtx.typ,abs_dphi=match_vtx.eleDphi,weight=1)
        h.fill("match_vtx_chi2Rank",vtype=match_vtx.typ,chi2Rank=match_vtx_chi2Rank,weight=1)
        h.fill("match_vtx_maxMiniRelIso",vtype=match_vtx.typ,iso=np.maximum(match_vtx.e1.miniRelIso,match_vtx.e2.miniRelIso),weight=1)
        h.fill("match_vtx_maxMiniRelIsoCorr",vtype=match_vtx.typ,iso=np.maximum(match_vtx.e1.miniRelIsoEleCorr,match_vtx.e2.miniRelIsoEleCorr),weight=1)
        h.fill("match_vtx_e1e2PassConvVeto",vtype=match_vtx.typ,passVeto=ak.values_astype((match_vtx.e1.conversionVeto) & (match_vtx.e2.conversionVeto),int),weight=1)

        #
        h.fill("match_vtx_gen_dR",vtype=match_vtx.typ,dR=match_vtx_genObj.dr,weight=1)
        h.fill("match_vtx_gen_vxy1",vtype=match_vtx.typ,vxy=match_vtx_genObj.vxy,weight=1)
        h.fill("match_vtx_gen_vxy10",vtype=match_vtx.typ,vxy=match_vtx_genObj.vxy,weight=1)
        h.fill("match_vtx_gen_vxy100",vtype=match_vtx.typ,vxy=match_vtx_genObj.vxy,weight=1)
        h.fill("match_vtx_gen_METdPhi",vtype=match_vtx.typ,abs_dphi=np.abs(match_vtx_genObj.METdPhi),weight=1)
        h.fill("match_vtx_gen_mass",vtype=match_vtx.typ,mass=match_vtx_genObj.mass,weight=1)
        h.fill("match_vtx_gen_pt",vtype=match_vtx.typ,pt=match_vtx_genObj.pt,weight=1)
        h.fill("match_vtx_gen_eta",vtype=match_vtx.typ,eta=match_vtx_genObj.eta,weight=1)
        h.fill("match_vtx_gen_phi",vtype=match_vtx.typ,phi=match_vtx_genObj.phi,weight=1)
        
        #
        h.fill("fake_vtx_dR",vtype=fake_vtx.typ,dR=fake_vtx.dR,weight=1)
        h.fill("fake_vtx_mindxy",vtype=fake_vtx.typ,dxy=fake_vtx.min_dxy,weight=1)
        h.fill("fake_vtx_vxy1",vtype=fake_vtx.typ,vxy=fake_vtx.vxy,weight=1)
        h.fill("fake_vtx_vxy10",vtype=fake_vtx.typ,vxy=fake_vtx.vxy,weight=1)
        h.fill("fake_vtx_vxy100",vtype=fake_vtx.typ,vxy=fake_vtx.vxy,weight=1)
        h.fill("fake_vtx_leadpT",vtype=fake_vtx.typ,pt=np.maximum(fake_vtx.e1.pt,fake_vtx.e2.pt),weight=1)
        h.fill("fake_vtx_METdPhi",vtype=fake_vtx.typ,abs_dphi=np.abs(fake_vtx.METdPhi),weight=1)
        h.fill('fake_vtx_mindRj',vtype=fake_vtx.typ,dR=fake_vtx.mindRj,weight=1)
        h.fill('fake_vtx_chi2',vtype=fake_vtx.typ,chi2=fake_vtx.reduced_chi2,weight=1)
        h.fill('fake_vtx_mass',vtype=fake_vtx.typ,mass=fake_vtx.m,weight=1)
        h.fill('fake_vtx_mindPhiJ',vtype=fake_vtx.typ,abs_dphi=np.abs(fake_vtx.mindPhiJ),weight=1)
        h.fill('fake_vtx_sign',vtype=fake_vtx.typ,sign=fake_vtx.sign,weight=1)
        h.fill('fake_vtx_pt',vtype=fake_vtx.typ,pt=fake_vtx.pt,weight=1)
        h.fill('fake_vtx_eta',vtype=fake_vtx.typ,eta=fake_vtx.eta,weight=1)
        h.fill('fake_vtx_phi',vtype=fake_vtx.typ,phi=fake_vtx.phi,weight=1)
        h.fill('fake_vtx_type',vtype=fake_vtx.typ,weight=1)
        h.fill("fake_vtx_minEleDrJ",vtype=fake_vtx.typ,dR=np.minimum(fake_vtx.e1.mindRj,fake_vtx.e2.mindRj),weight=1)
        h.fill("fake_vtx_minEleDPhiJ",vtype=fake_vtx.typ,abs_dphi=np.minimum(fake_vtx.e1.mindPhiJ,fake_vtx.e2.mindPhiJ),weight=1)
        h.fill("fake_vtx_mass_low",vtype=fake_vtx.typ,mass_low=fake_vtx.m,weight=1)
        h.fill("fake_vtx_mindxy_low",vtype=fake_vtx.typ,mindxy_low=fake_vtx.min_dxy,weight=1)
        h.fill("fake_vtx_sign_etaProd",vtype=fake_vtx.typ,sign_etaProd=ak.values_astype(np.sign(fake_vtx.e1.eta*fake_vtx.e2.eta),int),weight=1)
        h.fill("fake_vtx_CosThetaColl",vtype=fake_vtx.typ,cosTheta=fake_vtx.cos_collinear,weight=1)
        h.fill("fake_vtx_LxyCosThetaColl",vtype=fake_vtx.typ,LxyCosTheta=fake_vtx.projectedLxy,weight=1)
        h.fill("fake_vtx_LxyCosThetaCollZoom",vtype=fake_vtx.typ,LxyCosThetaZoom=fake_vtx.projectedLxy,weight=1)
        h.fill("fake_vtx_LxyCosThetaCollZoomZoom",vtype=fake_vtx.typ,LxyCosThetaZoomZoom=fake_vtx.projectedLxy,weight=1)
        h.fill("fake_vtx_eleDphi",vtype=fake_vtx.typ,abs_dphi=fake_vtx.eleDphi,weight=1)
        h.fill("fake_vtx_maxMiniRelIso",vtype=fake_vtx.typ,iso=np.maximum(fake_vtx.e1.miniRelIso,fake_vtx.e2.miniRelIso))
        h.fill("fake_vtx_maxMiniRelIsoCorr",vtype=fake_vtx.typ,iso=np.maximum(fake_vtx.e1.miniRelIsoEleCorr,fake_vtx.e2.miniRelIsoEleCorr))
        